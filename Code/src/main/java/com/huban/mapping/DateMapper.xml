<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huban.dao.DateMapper">
	<resultMap id="BaseResultMap" type="com.huban.pojo.Date">
		<id column="Date_Id" property="dateId" jdbcType="BIGINT" />
		<result column="Date_BelongId" property="dateBelongid" jdbcType="BIGINT" />
		<result column="Date_UserId" property="dateUserid" jdbcType="BIGINT" />
		<result column="Date_Value" property="dateValue" jdbcType="VARCHAR" />
		<result column="Date_Type" property="dateType" jdbcType="INTEGER" />
		<result column="Date_Status" property="dateStatus" jdbcType="INTEGER" />
		<result column="Date_CreateTime" property="dateCreatetime" jdbcType="TIMESTAMP" />
		<result column="Date_ModifyTime" property="dateModifytime" jdbcType="TIMESTAMP" />
		<result column="Date_Version" property="dateVersion" jdbcType="INTEGER" />
		<result column="Date_Delete" property="dateDelete" jdbcType="INTEGER" />
		<result column="Date_Number" property="dateNumber" jdbcType="BIGINT" />
		<result column="Date_Url" property="dateUrl" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		Date_Id, Date_UserId,Date_BelongId, Date_Value, Date_Type, Date_Status,
		Date_CreateTime, Date_ModifyTime, Date_Version,
		Date_Delete, Date_Number, Date_Url
	</sql>
	<!-- 自定义sql -->
	<insert id="addmessage" parameterType="com.huban.pojo.Date">
		insert into rb_Date (Date_Id, Date_UserId,Date_BelongId,Date_Value,
		Date_Type,
		Date_Status, Date_CreateTime, Date_ModifyTime,
		Date_Version, Date_Delete, Date_Number,
		Date_Url)
		values
		(#{dateId,jdbcType=BIGINT},#{dateUserid,jdbcType=BIGINT},#{dateBelongid,jdbcType=BIGINT},
		#{dateValue,jdbcType=VARCHAR}, #{dateType,jdbcType=INTEGER},
		#{dateStatus,jdbcType=INTEGER}, now(), now(),
		0, 0, #{dateNumber,jdbcType=BIGINT},
		#{dateUrl,jdbcType=VARCHAR})
	</insert>
	<select id="readbillcount" resultType="java.lang.Integer" parameterType="map">
		SELECT
			count(*)
		FROM
			rb_Date
		WHERE
			Date_UserId = #{userId}
		AND
			date_format(Date_CreateTime, '%Y-%m') = date_format(#{time}, '%Y-%m')
		AND Date_Type = 1
	</select>
	<!-- 阅读数量 -->
	<select id="ReadBillCountTop" resultType="java.lang.Long">
		SELECT
			Date_UserId,count(*) AS count
		FROM
			rb_Date
		WHERE
			Date_Delete = 0
		AND
			Date_Type = 1
		GROUP BY
			Date_UserId
		ORDER BY 
			count DESC
		LIMIT 5
	</select>
	<select id="readbill" resultMap="BaseResultMap" parameterType="map">
		SELECT
			Date_BelongId,Date_CreateTime
		FROM
			rb_Date
		WHERE
			Date_UserId = #{userId}
			<![CDATA[
     	AND TO_DAYS(NOW()) - TO_DAYS(Date_CreateTime) <= 7
          	]]>
		AND Date_Type = 1
			<!-- 7天 -->
		ORDER BY Date_CreateTime DESC
			LIMIT #{start},#{size}
		<!-- YEARWEEK(date_format(Date_CreateTime,'%Y-%m-%d')) = YEARWEEK(now()) --><!-- 这个星期 -->
		<!-- &apos; #{time} &apos; -->
	</select>
	<select id="readmore" resultMap="BaseResultMap" parameterType="map">
		SELECT
			Date_BelongId,Date_CreateTime
		FROM
			rb_Date
		WHERE
			Date_UserId = #{userId}
		AND
			date_format(Date_CreateTime, '%Y-%m-%d') = date_format(#{time},'%Y-%m-%d')
		AND
			Date_Type = 1
		ORDER BY
			Date_CreateTime DESC
		LIMIT
			#{start},#{size}
		<!-- YEARWEEK(date_format(Date_CreateTime,'%Y-%m-%d')) = YEARWEEK(now()) --><!-- 这个星期 -->
		<!-- &apos; #{time} &apos; -->
	</select>
	<select id="allread" resultMap="BaseResultMap" parameterType="map">
		SELECT
			Date_BelongId,Date_CreateTime
		FROM
			rb_Date
		WHERE
			Date_UserId = #{userId}
		AND
			Date_Type = 1
		ORDER BY
			Date_CreateTime DESC
		LIMIT
			#{start},#{size}
		<!-- YEARWEEK(date_format(Date_CreateTime,'%Y-%m-%d')) = YEARWEEK(now()) --><!-- 这个星期 -->
		<!-- &apos; #{time} &apos; -->
	</select>

	<select id="queryList" resultMap="BaseResultMap" parameterType="map">
		select
		<include refid="Base_Column_List" />
		from rb_Date
		where Date_UserId=#{userId}
		AND Date_Type = 1
		AND #{random}=#{random}
		ORDER BY Date_CreateTime DESC
		limit #{start},#{size}
	</select>
	<select id="querycount" resultType="java.lang.Integer"
		parameterType="map">
		select
		count(*)
		from rb_Date
		where Date_UserId=#{userId}
		AND Date_BelongId = #{bookId}
		AND Date_Type = 1
	</select>
	
	<!-- 查询记录数ById -->
	<select id="QueryCountById" resultType="java.lang.Integer" parameterType="java.lang.Long">
		select
		count(*)
		from rb_Date
		where Date_UserId=#{userId}
		AND Date_Type = 1
	</select> 

	<!-- 阅读次数排行 -->
	<select id="ranklist" parameterType="map" resultType="java.lang.Long">
		SELECT
		Date_UserId,
		count(*) AS num
		FROM rb_Date
		WHERE 1=1
		<if test="timeType==4"></if>
		<if test="timeType==3">
			AND YEARWEEK(date_format(Date_CreateTime,'%Y-%m-%d')) = YEARWEEK(now())
		</if>
		<if test="timeType==2">
     <![CDATA[
     AND TO_DAYS(NOW()) - TO_DAYS(Date_CreateTime) <= 1
          ]]>
		</if>
		AND Date_Delete = 0
		AND Date_UserId != 0
		AND Date_UserId is not null
		GROUP BY Date_UserId
		ORDER BY num DESC
		LIMIT #{start},#{size}
	</select>
	<select id="ranklistcount" parameterType="map" resultType="java.lang.Integer">
		SELECT
		count(*) AS num
		FROM rb_Date
		WHERE 1=1
		<if test="timeType==4"></if>
		<if test="timeType==3">
     <![CDATA[
      AND YEARWEEK(date_format(Date_CreateTime,'%Y-%m-%d')) = YEARWEEK(now())
          ]]>
		</if>
		<if test="timeType==2">
     <![CDATA[
     AND TO_DAYS(NOW()) - TO_DAYS(Date_CreateTime) <= 1
          ]]>
		</if>
		AND Date_Delete = 0
		AND Date_UserId != 0
		AND Date_UserId is not null
		GROUP BY Date_UserId
		ORDER BY num DESC
		LIMIT #{start},#{size}
	</select>


	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from rb_Date
		where Date_Id = #{dateId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from rb_Date
		where Date_Id = #{dateId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.huban.pojo.Date">
		insert into rb_Date (Date_Id, Date_UserId,Date_BelongId,Date_Value,
		Date_Type,
		Date_Status, Date_CreateTime, Date_ModifyTime,
		Date_Version, Date_Delete, Date_Number,
		Date_Url)
		values
		(#{dateId,jdbcType=BIGINT},#{dateUserid,jdbcType=BIGINT},#{dateBelongid,jdbcType=BIGINT},
		#{dateValue,jdbcType=VARCHAR}, #{dateType,jdbcType=INTEGER},
		#{dateStatus,jdbcType=INTEGER}, #{dateCreatetime,jdbcType=TIMESTAMP},
		#{dateModifytime,jdbcType=TIMESTAMP},
		#{dateVersion,jdbcType=INTEGER}, #{dateDelete,jdbcType=INTEGER}, #{dateNumber,jdbcType=BIGINT},
		#{dateUrl,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.huban.pojo.Date">
		insert into rb_Date
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="dateId != null">
				Date_Id,
			</if>
			<if test="dateUserid != null">
				Date_UserId,
			</if>
			<if test="dateBelongid != null">
				Date_BelongId,
			</if>
			<if test="dateValue != null">
				Date_Value,
			</if>
			<if test="dateType != null">
				Date_Type,
			</if>
			<if test="dateStatus != null">
				Date_Status,
			</if>
			<if test="dateCreatetime != null">
				Date_CreateTime,
			</if>
			<if test="dateModifytime != null">
				Date_ModifyTime,
			</if>
			<if test="dateVersion != null">
				Date_Version,
			</if>
			<if test="dateDelete != null">
				Date_Delete,
			</if>
			<if test="dateNumber != null">
				Date_Number,
			</if>
			<if test="dateUrl != null">
				Date_Url,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="dateId != null">
				#{dateId,jdbcType=BIGINT},
			</if>
			<if test="dateUserid != null">
				#{dateUserid,jdbcType=BIGINT},
			</if>
			<if test="dateBelongid != null">
				#{dateBelongid,jdbcType=BIGINT},
			</if>
			<if test="dateValue != null">
				#{dateValue,jdbcType=VARCHAR},
			</if>
			<if test="dateType != null">
				#{dateType,jdbcType=INTEGER},
			</if>
			<if test="dateStatus != null">
				#{dateStatus,jdbcType=INTEGER},
			</if>
			<if test="dateCreatetime != null">
				#{dateCreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="dateModifytime != null">
				#{dateModifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="dateVersion != null">
				#{dateVersion,jdbcType=INTEGER},
			</if>
			<if test="dateDelete != null">
				#{dateDelete,jdbcType=INTEGER},
			</if>
			<if test="dateNumber != null">
				#{dateNumber,jdbcType=BIGINT},
			</if>
			<if test="dateUrl != null">
				#{dateUrl,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.huban.pojo.Date">
		update rb_Date
		<set>
			<if test="dateUserid != null">
				Date_UserId = #{dateUserid,jdbcType=BIGINT},
			</if>
			<if test="dateBelongid != null">
				Date_BelongId = #{dateBelongid,jdbcType=BIGINT},
			</if>
			<if test="dateValue != null">
				Date_Value = #{dateValue,jdbcType=VARCHAR},
			</if>
			<if test="dateType != null">
				Date_Type = #{dateType,jdbcType=INTEGER},
			</if>
			<if test="dateStatus != null">
				Date_Status = #{dateStatus,jdbcType=INTEGER},
			</if>
			<if test="dateCreatetime != null">
				Date_CreateTime = #{dateCreatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="dateModifytime != null">
				Date_ModifyTime = #{dateModifytime,jdbcType=TIMESTAMP},
			</if>
			<if test="dateVersion != null">
				Date_Version = #{dateVersion,jdbcType=INTEGER},
			</if>
			<if test="dateDelete != null">
				Date_Delete = #{dateDelete,jdbcType=INTEGER},
			</if>
			<if test="dateNumber != null">
				Date_Number = #{dateNumber,jdbcType=BIGINT},
			</if>
			<if test="dateUrl != null">
				Date_Url = #{dateUrl,jdbcType=VARCHAR},
			</if>
		</set>
		where Date_Id = #{dateId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.huban.pojo.Date">
		update rb_Date
		set Date_UserId = #{dateUserid,jdbcType=BIGINT},
		Date_BelongId = #{dateBelongid,jdbcType=BIGINT},
		Date_Value = #{dateValue,jdbcType=VARCHAR},
		Date_Type = #{dateType,jdbcType=INTEGER},
		Date_Status = #{dateStatus,jdbcType=INTEGER},
		Date_CreateTime = #{dateCreatetime,jdbcType=TIMESTAMP},
		Date_ModifyTime = #{dateModifytime,jdbcType=TIMESTAMP},
		Date_Version = #{dateVersion,jdbcType=INTEGER},
		Date_Delete = #{dateDelete,jdbcType=INTEGER},
		Date_Number = #{dateNumber,jdbcType=BIGINT},
		Date_Url = #{dateUrl,jdbcType=VARCHAR}
		where Date_Id = #{dateId,jdbcType=BIGINT}
	</update>
</mapper>