<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huban.dao.VersionMapper" >
  <resultMap id="BaseResultMap" type="com.huban.pojo.Version" >
    <id column="Version_ID" property="versionId" jdbcType="BIGINT" />
    <result column="Version_TypeID" property="versionTypeid" jdbcType="BIGINT" />
    <result column="Version_Build" property="versionBuild" jdbcType="VARCHAR" />
    <result column="Version_Number" property="versionNumber" jdbcType="VARCHAR" />
    <result column="Version_ReleaseNote" property="versionReleasenote" jdbcType="VARCHAR" />
    <result column="Version_ReleaseTime" property="versionReleasetime" jdbcType="TIMESTAMP" />
    <result column="Version_CreateTime" property="versionCreatetime" jdbcType="TIMESTAMP" />
    <result column="Version_ModifyTime" property="versionModifytime" jdbcType="TIMESTAMP" />
    <result column="Version_Version" property="versionVersion" jdbcType="INTEGER" />
    <result column="Version_Status" property="versionStatus" jdbcType="TINYINT" />
    <result column="Version_Deleted" property="versionDeleted" jdbcType="TINYINT" />
    <result column="Version_FilePath" property="versionFilepath" jdbcType="VARCHAR" />
    <result column="Version_UpdateType" property="versionUpdatetype" jdbcType="INTEGER" />
    <result column="Version_IsPublish" property="versionIspublish" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Version_ID, Version_TypeID, Version_Build, Version_Number, Version_ReleaseNote, Version_ReleaseTime, 
    Version_CreateTime, Version_ModifyTime, Version_Version, Version_Status, Version_Deleted, 
    Version_FilePath, Version_UpdateType,Version_IsPublish
  </sql>
  <!-- 自定义sql -->
  <select id="MAX" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column_List" />
    from rb_version
    WHERE Version_TypeID = #{type,jdbcType=BIGINT}
    ORDER BY Version_Build DESC 
    LIMIT 1
  </select>
   <select id="querypublish" resultType="java.lang.Integer" parameterType="map">
    select 
    Version_IsPublish
    from rb_version
    WHERE Version_TypeID = #{type,jdbcType=BIGINT}
    AND Version_Build = #{bulid,jdbcType=VARCHAR}
    LIMIT 1
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rb_version
    where Version_ID = #{versionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rb_version
    where Version_ID = #{versionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huban.pojo.Version" >
    insert into rb_version (Version_ID, Version_TypeID, Version_Build, 
      Version_Number, Version_ReleaseNote, Version_ReleaseTime, 
      Version_CreateTime, Version_ModifyTime, 
      Version_Version, Version_Status, Version_Deleted, 
      Version_FilePath, Version_UpdateType,Version_IsPublish)
    values (#{versionId,jdbcType=BIGINT}, #{versionTypeid,jdbcType=BIGINT}, #{versionBuild,jdbcType=VARCHAR}, 
      #{versionNumber,jdbcType=VARCHAR}, #{versionReleasenote,jdbcType=VARCHAR}, #{versionReleasetime,jdbcType=TIMESTAMP}, 
      #{versionCreatetime,jdbcType=TIMESTAMP}, #{versionModifytime,jdbcType=TIMESTAMP}, 
      #{versionVersion,jdbcType=INTEGER}, #{versionStatus,jdbcType=TINYINT}, #{versionDeleted,jdbcType=TINYINT}, 
      #{versionFilepath,jdbcType=VARCHAR}, #{versionUpdatetype,jdbcType=INTEGER},#{versionIspublish,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.huban.pojo.Version" >
    insert into rb_version
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        Version_ID,
      </if>
      <if test="versionTypeid != null" >
        Version_TypeID,
      </if>
      <if test="versionBuild != null" >
        Version_Build,
      </if>
      <if test="versionNumber != null" >
        Version_Number,
      </if>
      <if test="versionReleasenote != null" >
        Version_ReleaseNote,
      </if>
      <if test="versionReleasetime != null" >
        Version_ReleaseTime,
      </if>
      <if test="versionCreatetime != null" >
        Version_CreateTime,
      </if>
      <if test="versionModifytime != null" >
        Version_ModifyTime,
      </if>
      <if test="versionVersion != null" >
        Version_Version,
      </if>
      <if test="versionStatus != null" >
        Version_Status,
      </if>
      <if test="versionDeleted != null" >
        Version_Deleted,
      </if>
      <if test="versionFilepath != null" >
        Version_FilePath,
      </if>
      <if test="versionUpdatetype != null" >
        Version_UpdateType,
      </if>
      <if test="versionIspublish != null" >
        Version_IsPublish,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="versionId != null" >
        #{versionId,jdbcType=BIGINT},
      </if>
      <if test="versionTypeid != null" >
        #{versionTypeid,jdbcType=BIGINT},
      </if>
      <if test="versionBuild != null" >
        #{versionBuild,jdbcType=VARCHAR},
      </if>
      <if test="versionNumber != null" >
        #{versionNumber,jdbcType=VARCHAR},
      </if>
      <if test="versionReleasenote != null" >
        #{versionReleasenote,jdbcType=VARCHAR},
      </if>
      <if test="versionReleasetime != null" >
        #{versionReleasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionCreatetime != null" >
        #{versionCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionModifytime != null" >
        #{versionModifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionVersion != null" >
        #{versionVersion,jdbcType=INTEGER},
      </if>
      <if test="versionStatus != null" >
        #{versionStatus,jdbcType=TINYINT},
      </if>
      <if test="versionDeleted != null" >
        #{versionDeleted,jdbcType=TINYINT},
      </if>
      <if test="versionFilepath != null" >
        #{versionFilepath,jdbcType=VARCHAR},
      </if>
      <if test="versionUpdatetype != null" >
        #{versionUpdatetype,jdbcType=INTEGER},
      </if>
      <if test="versionIspublish != null" >
        #{versionIspublish,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huban.pojo.Version" >
    update rb_version
    <set >
      <if test="versionTypeid != null" >
        Version_TypeID = #{versionTypeid,jdbcType=BIGINT},
      </if>
      <if test="versionBuild != null" >
        Version_Build = #{versionBuild,jdbcType=VARCHAR},
      </if>
      <if test="versionNumber != null" >
        Version_Number = #{versionNumber,jdbcType=VARCHAR},
      </if>
      <if test="versionReleasenote != null" >
        Version_ReleaseNote = #{versionReleasenote,jdbcType=VARCHAR},
      </if>
      <if test="versionReleasetime != null" >
        Version_ReleaseTime = #{versionReleasetime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionCreatetime != null" >
        Version_CreateTime = #{versionCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionModifytime != null" >
        Version_ModifyTime = #{versionModifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionVersion != null" >
        Version_Version = #{versionVersion,jdbcType=INTEGER},
      </if>
      <if test="versionStatus != null" >
        Version_Status = #{versionStatus,jdbcType=TINYINT},
      </if>
      <if test="versionDeleted != null" >
        Version_Deleted = #{versionDeleted,jdbcType=TINYINT},
      </if>
      <if test="versionFilepath != null" >
        Version_FilePath = #{versionFilepath,jdbcType=VARCHAR},
      </if>
      <if test="versionUpdatetype != null" >
        Version_UpdateType = #{versionUpdatetype,jdbcType=INTEGER},
      </if>
      <if test="versionIspublish != null" >
        Version_IsPublish = #{versionIspublish,jdbcType=INTEGER},
      </if>
    </set>
    where Version_ID = #{versionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huban.pojo.Version" >
    update rb_version
    set Version_TypeID = #{versionTypeid,jdbcType=BIGINT},
      Version_Build = #{versionBuild,jdbcType=VARCHAR},
      Version_Number = #{versionNumber,jdbcType=VARCHAR},
      Version_ReleaseNote = #{versionReleasenote,jdbcType=VARCHAR},
      Version_ReleaseTime = #{versionReleasetime,jdbcType=TIMESTAMP},
      Version_CreateTime = #{versionCreatetime,jdbcType=TIMESTAMP},
      Version_ModifyTime = #{versionModifytime,jdbcType=TIMESTAMP},
      Version_Version = #{versionVersion,jdbcType=INTEGER},
      Version_Status = #{versionStatus,jdbcType=TINYINT},
      Version_Deleted = #{versionDeleted,jdbcType=TINYINT},
      Version_FilePath = #{versionFilepath,jdbcType=VARCHAR},
      Version_UpdateType = #{versionUpdatetype,jdbcType=INTEGER}
      Version_IsPublish = #{versionIspublish,jdbcType=INTEGER}
    where Version_ID = #{versionId,jdbcType=BIGINT}
  </update>
</mapper>