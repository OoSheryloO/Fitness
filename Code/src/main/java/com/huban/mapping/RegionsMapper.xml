<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.huban.dao.RegionsMapper" >
  <resultMap id="BaseResultMap" type="com.huban.pojo.Regions" >
    <id column="Region_ID" property="regionId" jdbcType="BIGINT" />
    <result column="Region_ParentID" property="regionParentid" jdbcType="BIGINT" />
    <result column="Region_No" property="regionNo" jdbcType="VARCHAR" />
    <result column="Region_Name" property="regionName" jdbcType="VARCHAR" />
    <result column="Region_English" property="regionEnglish" jdbcType="VARCHAR" />
    <result column="Region_ShortName" property="regionShortname" jdbcType="VARCHAR" />
    <result column="Region_Level" property="regionLevel" jdbcType="TINYINT" />
    <result column="Region_Order" property="regionOrder" jdbcType="INTEGER" />
    <result column="Region_CreateTime" property="regionCreatetime" jdbcType="TIMESTAMP" />
    <result column="Region_ModifyTime" property="regionModifytime" jdbcType="TIMESTAMP" />
    <result column="Region_Version" property="regionVersion" jdbcType="INTEGER" />
    <result column="Region_Status" property="regionStatus" jdbcType="TINYINT" />
    <result column="Region_Deleted" property="regionDeleted" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    Region_ID, Region_ParentID, Region_No, Region_Name, Region_English, Region_ShortName, 
    Region_Level, Region_Order, Region_CreateTime, Region_ModifyTime, Region_Version, 
    Region_Status, Region_Deleted
  </sql>
  <sql id="Base_Column" >
    Region_ID, Region_ParentID, Region_No, Region_Name, Region_English, Region_ShortName
  </sql>
  <!-- 自定义sql -->
  <select id="firstLevel" resultMap="BaseResultMap" parameterType="map">
    select 
    <include refid="Base_Column" />
    from rb_regions
    where Region_Level = 1
    AND Region_Deleted = 0
    ORDER BY Region_English <!-- 
    limit #{start},#{size} -->
  </select>
  <select id="secondLevel" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column" />
    from rb_regions
    where Region_ParentID = #{regionId,jdbcType=BIGINT}
    AND Region_Deleted = 0
    AND Region_Level = 2
    ORDER BY Region_English
  </select>
  <select id="thirdLevel" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column" />
    from rb_regions
    where Region_ParentID = #{regionId,jdbcType=BIGINT}
    AND Region_Deleted = 0
    AND Region_Level = 3
    ORDER BY Region_English
  </select>
 
 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from rb_regions
    where Region_ID = #{regionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from rb_regions
    where Region_ID = #{regionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.huban.pojo.Regions" >
    insert into rb_regions (Region_ID, Region_ParentID, Region_No, 
      Region_Name, Region_English, Region_ShortName, 
      Region_Level, Region_Order, Region_CreateTime, 
      Region_ModifyTime, Region_Version, Region_Status, 
      Region_Deleted)
    values (#{regionId,jdbcType=BIGINT}, #{regionParentid,jdbcType=BIGINT}, #{regionNo,jdbcType=VARCHAR}, 
      #{regionName,jdbcType=VARCHAR}, #{regionEnglish,jdbcType=VARCHAR}, #{regionShortname,jdbcType=VARCHAR}, 
      #{regionLevel,jdbcType=TINYINT}, #{regionOrder,jdbcType=INTEGER}, #{regionCreatetime,jdbcType=TIMESTAMP}, 
      #{regionModifytime,jdbcType=TIMESTAMP}, #{regionVersion,jdbcType=INTEGER}, #{regionStatus,jdbcType=TINYINT}, 
      #{regionDeleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.huban.pojo.Regions" >
    insert into rb_regions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        Region_ID,
      </if>
      <if test="regionParentid != null" >
        Region_ParentID,
      </if>
      <if test="regionNo != null" >
        Region_No,
      </if>
      <if test="regionName != null" >
        Region_Name,
      </if>
      <if test="regionEnglish != null" >
        Region_English,
      </if>
      <if test="regionShortname != null" >
        Region_ShortName,
      </if>
      <if test="regionLevel != null" >
        Region_Level,
      </if>
      <if test="regionOrder != null" >
        Region_Order,
      </if>
      <if test="regionCreatetime != null" >
        Region_CreateTime,
      </if>
      <if test="regionModifytime != null" >
        Region_ModifyTime,
      </if>
      <if test="regionVersion != null" >
        Region_Version,
      </if>
      <if test="regionStatus != null" >
        Region_Status,
      </if>
      <if test="regionDeleted != null" >
        Region_Deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="regionId != null" >
        #{regionId,jdbcType=BIGINT},
      </if>
      <if test="regionParentid != null" >
        #{regionParentid,jdbcType=BIGINT},
      </if>
      <if test="regionNo != null" >
        #{regionNo,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null" >
        #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionEnglish != null" >
        #{regionEnglish,jdbcType=VARCHAR},
      </if>
      <if test="regionShortname != null" >
        #{regionShortname,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="regionOrder != null" >
        #{regionOrder,jdbcType=INTEGER},
      </if>
      <if test="regionCreatetime != null" >
        #{regionCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionModifytime != null" >
        #{regionModifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionVersion != null" >
        #{regionVersion,jdbcType=INTEGER},
      </if>
      <if test="regionStatus != null" >
        #{regionStatus,jdbcType=TINYINT},
      </if>
      <if test="regionDeleted != null" >
        #{regionDeleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.huban.pojo.Regions" >
    update rb_regions
    <set >
      <if test="regionParentid != null" >
        Region_ParentID = #{regionParentid,jdbcType=BIGINT},
      </if>
      <if test="regionNo != null" >
        Region_No = #{regionNo,jdbcType=VARCHAR},
      </if>
      <if test="regionName != null" >
        Region_Name = #{regionName,jdbcType=VARCHAR},
      </if>
      <if test="regionEnglish != null" >
        Region_English = #{regionEnglish,jdbcType=VARCHAR},
      </if>
      <if test="regionShortname != null" >
        Region_ShortName = #{regionShortname,jdbcType=VARCHAR},
      </if>
      <if test="regionLevel != null" >
        Region_Level = #{regionLevel,jdbcType=TINYINT},
      </if>
      <if test="regionOrder != null" >
        Region_Order = #{regionOrder,jdbcType=INTEGER},
      </if>
      <if test="regionCreatetime != null" >
        Region_CreateTime = #{regionCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionModifytime != null" >
        Region_ModifyTime = #{regionModifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="regionVersion != null" >
        Region_Version = #{regionVersion,jdbcType=INTEGER},
      </if>
      <if test="regionStatus != null" >
        Region_Status = #{regionStatus,jdbcType=TINYINT},
      </if>
      <if test="regionDeleted != null" >
        Region_Deleted = #{regionDeleted,jdbcType=TINYINT},
      </if>
    </set>
    where Region_ID = #{regionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huban.pojo.Regions" >
    update rb_regions
    set Region_ParentID = #{regionParentid,jdbcType=BIGINT},
      Region_No = #{regionNo,jdbcType=VARCHAR},
      Region_Name = #{regionName,jdbcType=VARCHAR},
      Region_English = #{regionEnglish,jdbcType=VARCHAR},
      Region_ShortName = #{regionShortname,jdbcType=VARCHAR},
      Region_Level = #{regionLevel,jdbcType=TINYINT},
      Region_Order = #{regionOrder,jdbcType=INTEGER},
      Region_CreateTime = #{regionCreatetime,jdbcType=TIMESTAMP},
      Region_ModifyTime = #{regionModifytime,jdbcType=TIMESTAMP},
      Region_Version = #{regionVersion,jdbcType=INTEGER},
      Region_Status = #{regionStatus,jdbcType=TINYINT},
      Region_Deleted = #{regionDeleted,jdbcType=TINYINT}
    where Region_ID = #{regionId,jdbcType=BIGINT}
  </update>
</mapper>